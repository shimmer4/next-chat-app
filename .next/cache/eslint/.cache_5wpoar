[{"F:\\VSCode\\react\\myfirst-next\\pages\\index.js":"1","F:\\VSCode\\react\\myfirst-next\\pages\\_app.js":"2"},{"size":695,"mtime":1637081742730,"results":"3","hashOfConfig":"4"},{"size":137,"mtime":499162500000,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"g5enha",{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\VSCode\\react\\myfirst-next\\pages\\index.js",["10"],"F:\\VSCode\\react\\myfirst-next\\pages\\_app.js",[],{"ruleId":"11","severity":1,"message":"12","line":17,"column":20,"nodeType":"13","endLine":19,"endColumn":4},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression"]